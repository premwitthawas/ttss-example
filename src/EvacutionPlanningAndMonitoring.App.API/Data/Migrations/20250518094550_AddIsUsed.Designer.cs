// <auto-generated />
using System;
using EvacutionPlanningAndMonitoring.App.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EvacutionPlanningAndMonitoring.App.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250518094550_AddIsUsed")]
    partial class AddIsUsed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionPlan", b =>
                {
                    b.Property<string>("ZoneID")
                        .HasColumnType("text");

                    b.Property<string>("VehicleID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ETA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfPeople")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ZoneID", "VehicleID");

                    b.HasIndex("VehicleID");

                    b.ToTable("EvacutionPlans");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionStatus", b =>
                {
                    b.Property<string>("ZoneID")
                        .HasColumnType("text");

                    b.Property<string>("LastVechicleUsed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RemainingPeople")
                        .HasColumnType("integer");

                    b.Property<int?>("TotalEvacuated")
                        .HasColumnType("integer");

                    b.HasKey("ZoneID");

                    b.ToTable("EvacutionStatuses");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionZone", b =>
                {
                    b.Property<string>("ZoneID")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UrgencyLevel")
                        .HasColumnType("integer");

                    b.HasKey("ZoneID");

                    b.ToTable("EvacutionZones");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.Vehicle", b =>
                {
                    b.Property<string>("VehicleID")
                        .HasColumnType("text");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<int>("Speed")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("VehicleID");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionPlan", b =>
                {
                    b.HasOne("EvacutionPlanningAndMonitoring.App.API.Models.Vehicle", "Vehicle")
                        .WithMany("EvacutionPlans")
                        .HasForeignKey("VehicleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionZone", "EvacutionZone")
                        .WithMany("EvacutionPlans")
                        .HasForeignKey("ZoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvacutionZone");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionStatus", b =>
                {
                    b.HasOne("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionZone", "EvacutionZone")
                        .WithOne("EvacutionStatus")
                        .HasForeignKey("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionStatus", "ZoneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvacutionZone");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.EvacutionZone", b =>
                {
                    b.Navigation("EvacutionPlans");

                    b.Navigation("EvacutionStatus");
                });

            modelBuilder.Entity("EvacutionPlanningAndMonitoring.App.API.Models.Vehicle", b =>
                {
                    b.Navigation("EvacutionPlans");
                });
#pragma warning restore 612, 618
        }
    }
}
